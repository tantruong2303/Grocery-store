@{
    ViewData["Title"] = Routers.UpdateProduct.Title;
    Product product = (Product)ViewData["product"];

    var name = new FormField() { Label = "Product Name", Field = "name", Type = "text", Value = product.Name };
    var descirption = new FormField()
    {
        Label = "Description",
        Field = "description",
        Type = "text",
        Value = product.Description
    };
    var status = new FormField()
    {
        Label = "Status",
        Field = "status",
        Type = "text",
        Value = product.Status.ToString()
    };
    var originalPrice = new FormField()
    {
        Label = "Original Price",
        Field = "originalPrice",
        Type = "number",
        Value = product.OriginalPrice.ToString()
    };
    var retailPrice = new FormField()
    {
        Label = "Retail Price",
        Field = "retailPrice",
        Type = "number",
        Value = product.RetailPrice.ToString()
    };
    var quantity = new FormField()
    {
        Label = "Quantity",
        Field = "quantity",
        Type = "number",
        Value = product.Quantity.ToString()
    };
    var file = new FormField() { Label = "Product Image", Field = "file", Type = "file" };
    var categoryId = new FormField()
    {
        Label = "Category ID",
        Field = "categoryId",
        Type = "text",
        Value = product.CategoryId
    };

    var updateBtn = new FormField() { Label = "Update Product" };

    var actionLink = $"{Routers.UpdateProduct.Link}?productId={product.ProductId}";
}

<div class="flex items-center justify-center flex-1 ">
    <form method="post" action="@actionLink" enctype="multipart/form-data"
        class="flex-1 px-4 py-8 mx-2 my-2 space-y-8 bg-white rounded-md shadow-lg md:mx-0 md:w-96 bg-opacity-90 md:flex-none fade-in">
        <h1 class="text-4xl font-semibold text-center">Update Product</h1>
        <div class="flex justify-center max-h-64">
            <img src="@product.ImageUrl" alt="product" id="pre-photo" class="inline-block object-cover w-full " />
        </div>
        @await Html.PartialAsync("~/Views/Components/Form/FormMsg.cshtml")
        <div class="space-y-4">
            @await Html.PartialAsync("~/Views/Components/Form/FormMsg.cshtml")
            @await Html.PartialAsync("~/Views/Components/Form/TextFiled.cshtml", name)
            @await Html.PartialAsync("~/Views/Components/Form/TextFiled.cshtml", descirption)
            @await Html.PartialAsync("~/Views/Components/Form/TextFiled.cshtml", originalPrice)
            @await Html.PartialAsync("~/Views/Components/Form/TextFiled.cshtml", retailPrice)
            @await Html.PartialAsync("~/Views/Components/Form/TextFiled.cshtml", quantity)
            @await Html.PartialAsync("~/Views/Components/Form/FormCategories.cshtml")
            @await Html.PartialAsync("~/Views/Components/Form/TextFiled.cshtml", file)
            <div class="flex items-center space-x-2">
                <label class="font-medium">Status: </label>
                @Html.RadioButton("status", 1, true)<span>Active </span>
                @Html.RadioButton("status", 0)<span>Inactive</span>
            </div>
        </div>
        @await Html.PartialAsync("~/Views/Components/Form/FormBtn.cshtml", updateBtn)
    </form>
</div>
<script>
    document.getElementById("file").addEventListener(
        "change",
        function () {
            const reader = new FileReader();
            reader.onload = function () {
                const dataURL = reader.result;
                const output = document.getElementById("pre-photo");
                output.src = dataURL;
            };
            reader.readAsDataURL(this.files[0]);
        },
        false
    );
</script>